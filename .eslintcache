[{"/Users/mimi/Desktop/productivityapp/src/index.js":"1","/Users/mimi/Desktop/productivityapp/src/App.js":"2","/Users/mimi/Desktop/productivityapp/src/reportWebVitals.js":"3","/Users/mimi/Desktop/productivityapp/src/components/Form.js":"4","/Users/mimi/Desktop/productivityapp/src/components/TodoList.js":"5","/Users/mimi/Desktop/productivityapp/src/components/Todo.js":"6","/Users/mimi/Desktop/productivityapp/src/components/SplashScreen.js":"7"},{"size":500,"mtime":1612030909478,"results":"8","hashOfConfig":"9"},{"size":2563,"mtime":1612561572406,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":1612030909478,"results":"11","hashOfConfig":"9"},{"size":1234,"mtime":1612048392928,"results":"12","hashOfConfig":"9"},{"size":587,"mtime":1612046971383,"results":"13","hashOfConfig":"9"},{"size":952,"mtime":1612046972822,"results":"14","hashOfConfig":"9"},{"size":1447,"mtime":1612553038977,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1d553gt",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":1,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/mimi/Desktop/productivityapp/src/index.js",[],["33","34"],"/Users/mimi/Desktop/productivityapp/src/App.js",["35","36"],"import React, {useState, useEffect} from \"react\";\nimport  './App.css';\n//Importing Components\nimport Form from './components/Form';\nimport TodoList from './components/TodoList';\nimport Darkmode from \"darkmode-js/src\";\n\nfunction App() {\n  //States\n  const [inputText, setInputText] = useState(\"\");\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n  //Darkmode toggle options\n  const options = {\n    bottom: '64px', // default: '32px'\n    right: 'unset', // default: '32px'\n    left: '32px', // default: 'unset'\n    time: '0.5s', // default: '0.3s'\n    mixColor: '#fff', // default: '#fff'\n    backgroundColor: '#fff',  // default: '#fff'\n    buttonColorDark: '#100f2c',  // default: '#100f2c'\n    buttonColorLight: '#fff', // default: '#fff'\n    saveInCookies: false, // default: true,\n    label: 'ðŸŒ“', // default: ''\n    autoMatchOsTheme: true // default: true\n  }\n\n  new Darkmode(). showWidget();\n\n  const darkmode = new Darkmode(options);\n  darkmode.showWidget();\n\n  //Run Once when the app starts\n  useEffect(() => {\n    getLocalTodos();\n  }, [])\n  //Use Effect\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  }, [todos, status]);\n\n  //Functions and Events\n  const filterHandler = () => {\n    switch(status){\n      case 'completed':\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case 'incompleted':\n        setFilteredTodos(todos.filter(todo => todo.completed === false));\n        break;\n      default:\n        setFilteredTodos(todos);\n        break;\n    }\n  }\n  // Save local todos\n  const saveLocalTodos = () => {\n    if(localStorage.getItem(\"todos\") === null){\n      localStorage.setItem(\"todos\", JSON.stringify([]));\n    }else{\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }\n  }\n  const getLocalTodos = () => {\n    if(localStorage.getItem(\"todos\") === null){\n      localStorage.setItem('todos', JSON.stringify([]));\n    }else{\n      let todoLocal = JSON.parse(localStorage.getItem('todos'));\n      setTodos(todoLocal);\n    }\n  }\n  \n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Today's focus</h1>\n      </header>\n      <Form inputText = {inputText} \n            todos = {todos} \n            setTodos = {setTodos} \n            setInputText = {setInputText}\n            setStatus = {setStatus}/>\n      <TodoList setTodos = {setTodos} \n                todos = {todos}\n                filteredTodos = {filteredTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mimi/Desktop/productivityapp/src/reportWebVitals.js",[],"/Users/mimi/Desktop/productivityapp/src/components/Form.js",[],"/Users/mimi/Desktop/productivityapp/src/components/TodoList.js",[],"/Users/mimi/Desktop/productivityapp/src/components/Todo.js",[],["37","38"],"/Users/mimi/Desktop/productivityapp/src/components/SplashScreen.js",["39"],{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","severity":1,"message":"45","line":29,"column":3,"nodeType":"46","messageId":"47","endLine":29,"endColumn":29,"fix":"48"},{"ruleId":"49","severity":1,"message":"50","line":42,"column":6,"nodeType":"51","endLine":42,"endColumn":21,"suggestions":"52"},{"ruleId":"40","replacedBy":"53"},{"ruleId":"42","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":19,"column":7,"nodeType":"57","messageId":"58","endLine":19,"endColumn":11},"no-native-reassign",["59"],"no-negated-in-lhs",["60"],"no-whitespace-before-property","Unexpected whitespace before property showWidget.","MemberExpression","unexpectedWhitespace",{"range":"61","text":"62"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'filterHandler' and 'saveLocalTodos'. Either include them or remove the dependency array.","ArrayExpression",["63"],["59"],["60"],"no-unused-vars","'Page' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",[980,982],".",{"desc":"64","fix":"65"},"Update the dependencies array to be: [todos, status, filterHandler, saveLocalTodos]",{"range":"66","text":"67"},[1231,1246],"[todos, status, filterHandler, saveLocalTodos]"]